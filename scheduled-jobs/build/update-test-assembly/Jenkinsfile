node() {
    checkout scm
    commonlib = load("pipeline-scripts/commonlib.groovy")

    properties( [
        buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '100', daysToKeepStr: '', numToKeepStr: '100')),
        disableConcurrentBuilds(),
        disableResume(),
    ] )

    def jobs = [:]

    // Define base images we want to keep current
    def base_images = [
        '4.12': 'openshift-base-nodejs,openshift-base-rhel8,openshift-base-rhel9,openshift-enterprise-base',
        '4.13': 'openshift-base-nodejs,openshift-base-rhel9,openshift-base-rhel8,openshift-enterprise-base-rhel9,openshift-enterprise-base',
        '4.14': 'openshift-base-rhel9,openshift-base-nodejs,openshift-base-rhel8,openshift-enterprise-base-rhel9,openshift-enterprise-base',
        '4.15': 'openshift-base-rhel9,openshift-base-nodejs,openshift-base-rhel8,openshift-enterprise-base-rhel9,openshift-enterprise-base',
        '4.16': 'openshift-base-nodejs.rhel9,openshift-base-rhel8,openshift-base-rhel9,openshift-enterprise-base-rhel9,openshift-enterprise-base',
        '4.17': 'openshift-base-nodejs.rhel9,openshift-base-rhel8,openshift-base-rhel9,openshift-enterprise-base-rhel9,openshift-enterprise-base',
        '4.18': 'openshift-base-nodejs.rhel9,openshift-base-rhel9,openshift-enterprise-base-rhel9',
        '4.19': 'openshift-base-nodejs.rhel9,openshift-base-rhel9,openshift-enterprise-base-rhel9',
        '4.20': 'openshift-base-nodejs.rhel9,openshift-base-rhel9,openshift-enterprise-base-rhel9',
    ]

    for ( version in commonlib.ocp4Versions ) {
        def cv = "${version}" // make sure we use a locally scoped variable
        // Fall back to 4.19 if we did not manage the above list
        def images = base_images['4.19']
        if (cv in base_images) { images = base_images[cv] }

        // Trigger ocp4 plashet build for test assembly in ${version}
        jobs["plashets-v${version}"] = {
            build(
                job: '../aos-cd-builds/build%2Focp4',
                parameters: [
                    string(name: 'BUILD_VERSION', value: "${cv}"),
		    string(name: 'ASSEMBLY', value: 'test',
                    booleanParam(name: 'IGNORE_LOCKS', value: true),
                    string(name: 'BUILD_IMAGES', value: 'only'),
                    string(name: 'IMAGE_LIST', value: images),
                    booleanParam(name: 'SKIP_PLASHETS', value: false)
                ],
                propagate: false
            )
        }
        jobs["base_image-konflux-v${version}"] = {
            build(
                job: '../aos-cd-builds/build%2Focp4-konflux',
                parameters: [
                    string(name: 'BUILD_VERSION', value: "${cv}"),
		    string(name: 'ASSEMBLY', value: 'test',
                    booleanParam(name: 'IGNORE_LOCKS', value: true),
                    string(name: 'BUILD_IMAGES', value: 'only'),
                    string(name: 'IMAGE_LIST', value: images),
                    booleanParam(name: 'SKIP_PLASHETS', value: true)
                ],
                propagate: false
            )
        }
    }

    parallel jobs
}
