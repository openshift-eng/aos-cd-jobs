properties([
    buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '', daysToKeepStr: '', numToKeepStr: '100')),
    disableConcurrentBuilds(),
    disableResume(),
])

failed = false

node() {
    checkout scm
    buildlib = load("pipeline-scripts/buildlib.groovy")
    commonlib = buildlib.commonlib

    commonlib.shell('sudo systemctl restart stunnel')

    try {
        timeout(activity: true, time: 60, unit: 'MINUTES') {
            b = build(
                job: '../scanning/scanning%2Fimages-health',
                parameters: [
                    booleanParam(name: 'SEND_TO_RELEASE_CHANNEL', value: true),
                    booleanParam(name: 'SEND_TO_FORUM_OCP_ART', value: true),
                ],
                propagate: false,
            )
            failed |= (b.result != "SUCCESS")
        }
    } catch(te) {
        failed = true
    }

    buildlib.cleanWorkspace()
}

currentBuild.result = failed ? "FAILURE" : "SUCCESS"
