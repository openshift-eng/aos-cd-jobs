<?xml version='1.0' encoding='UTF-8'?>
<com.tikal.jenkins.plugins.multijob.MultiJobProject plugin="jenkins-multijob-plugin@1.21">
  <actions/>
  <description>&lt;div style=&quot;font-size: 32px; line-height: 1.5em; background-color: yellow; padding: 5px;&quot;&gt;WARNING: THIS IS AN AUTO-GENERATED JOB DEFINITION. CHANGES MADE USING THE ONLINE EDITOR WILL NOT BE HONORED. MAKE CHANGES TO THE JOB DEFINITIONS IN THE &lt;a href=&#34;https://github.com/openshift/aos-cd-jobs/tree/sjb&#34;&gt;openshift/aos-cd-jobs&lt;/a&gt; REPOSITORY INSTEAD.&lt;/div&gt;</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.25">
      <autoRebuild>true</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>7</daysToKeep>
        <numToKeep>-1</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>ORIGIN_TARGET_BRANCH</name>
          <description>The branch in the &lt;a href=&#34;https://github.com/openshift/origin&#34;&gt;origin&lt;/a&gt; repository to test against.</description>
          <defaultValue>master</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>OPENSHIFT_ANSIBLE_TARGET_BRANCH</name>
          <description>The branch in the &lt;a href=&#34;https://github.com/openshift/openshift-ansible&#34;&gt;openshift-ansible&lt;/a&gt; repository to test against.</description>
          <defaultValue>master</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>AOS_CD_JOBS_TARGET_BRANCH</name>
          <description>The branch in the &lt;a href=&#34;https://github.com/openshift/aos-cd-jobs&#34;&gt;aos-cd-jobs&lt;/a&gt; repository to test against.</description>
          <defaultValue>master</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>SUITE</name>
          <description>Which shell file in the &lt;a href=&#39;https://github.com/openshift/origin/tree/master/test/extended&#39;&gt;&lt;code&gt;origin/test/extended/&lt;/code&gt;&lt;/a&gt; di rectory to run.</description>
          <defaultValue>conformance</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>FOCUS</name>
          <description>Literal string to pass to &lt;code&gt;--ginkgo.focus&lt;/code&gt;</description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>DOCKER_STORAGE_DRIVER</name>
          <description>The storage driver to use when configuring the cluster. &#39;overlay2&#39; and &#39;devicemapper&#39; are allowed.
</description>
          <defaultValue>overlay2</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>OPENSHIFT_ANSIBLE_IMAGE</name>
          <description>The image to install the cluster with. If set, defaults to the value defined by the &lt;a href=&#39;https://github.com/openshift/release/blob/master/cluster/bin/local.sh&#39;&gt;&lt;code&gt;cluster/bin/local.sh&lt;/code&gt;&lt;/a&gt; script.
</description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ADDITIONAL_SKIP</name>
          <description>Regular expression to filter additional tests from the conformance suite.
See also:
&lt;div&gt;
&lt;a style=&#34;display: block&#34; href=&#39;https://github.com/openshift/openshift-ansible/pull/3017&#39;&gt;&lt;code&gt;openshift-ansible&lt;/code&gt; pull 3017&lt;/a&gt;&lt;/br&gt;
&lt;a style=&#34;display: block&#34; href=&#39;https://github.com/openshift/origin/issues/12361&#39;&gt;&lt;code&gt;origin&lt;/code&gt; issue 12361&lt;/a&gt;&lt;/br&gt;
&lt;a style=&#34;display: block&#34; href=&#39;https://github.com/openshift/origin/issues/12362&#39;&gt;&lt;code&gt;origin&lt;/code&gt; issue 12362&lt;/a&gt;&lt;/br&gt;
&lt;a style=&#34;display: block&#34; href=&#39;https://github.com/openshift/origin/issues/12784&#39;&gt;&lt;code&gt;origin&lt;/code&gt; issue 12784&lt;/a&gt;&lt;/br&gt;
&lt;a style=&#34;display: block&#34; href=&#39;https://github.com/openshift/origin/issues/12629&#39;&gt;&lt;code&gt;origin&lt;/code&gt; issue 12629&lt;/a&gt;&lt;/br&gt;
&lt;a style=&#34;display: block&#34; href=&#39;https://github.com/openshift/origin/issues/11016&#39;&gt;&lt;code&gt;origin&lt;/code&gt; issue 11016&lt;/a&gt;&lt;/br&gt;
&lt;a style=&#34;display: block&#34; href=&#39;https://github.com/kubernetes/kubernetes/issues/40953&#39;&gt;&lt;code&gt;kubernetes&lt;/code&gt; issue 40953&lt;/a&gt;&lt;/br&gt;
&lt;a style=&#34;display: block&#34; href=&#39;https://github.com/openshift/origin/issues/12072&#39;&gt;&lt;code&gt;origin&lt;/code&gt; issue 12072&lt;/a&gt;&lt;/br&gt;
&lt;/div&gt;</description>
          <defaultValue>|should provide DNS for services|should support subPath|should work with TCP \(when fully idled\)|should test kubelet managed /etc/hosts file|\[networking\]\[router\]|Downward API volume should update annotations on modification|should run a deployment to completion and then scale to zero|Basic StatefulSet functionality Scaling down before scale up is finished should wait until current pod will be running and ready before it will be removed|Probing container should \*not\* be restarted with a /healthz http liveness probe</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>RELEASE_TARGET_BRANCH</name>
          <description>The branch in the &lt;a href=&#34;https://github.com/openshift/release&#34;&gt;release&lt;/a&gt; repository to test against.</description>
          <defaultValue>master</defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@1.9.0">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <categories class="java.util.concurrent.CopyOnWriteArrayList"/>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
      <paramsToUseForLimit></paramsToUseForLimit>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <authToken>origin1</authToken>
  <triggers/>
  <concurrentBuild>true</concurrentBuild>
  <builders>
    <com.tikal.jenkins.plugins.multijob.MultiJobBuilder>
      <phaseName>Test Phase</phaseName>
      <phaseJobs>
        <com.tikal.jenkins.plugins.multijob.PhaseJobsConfig>
          <jobName>test_branch_origin_check</jobName>
          <currParams>true</currParams>
          <exposedSCM>false</exposedSCM>
          <disableJob>false</disableJob>
          <parsingRulesPath></parsingRulesPath>
          <maxRetries>0</maxRetries>
          <enableRetryStrategy>false</enableRetryStrategy>
          <enableCondition>false</enableCondition>
          <abortAllJob>false</abortAllJob>
          <condition></condition>
          <configs class="empty-list"/>
          <killPhaseOnJobResultCondition>NEVER</killPhaseOnJobResultCondition>
          <buildOnlyIfSCMChanges>false</buildOnlyIfSCMChanges>
          <applyConditionOnlyIfNoSCMChanges>false</applyConditionOnlyIfNoSCMChanges>
        </com.tikal.jenkins.plugins.multijob.PhaseJobsConfig>
        <com.tikal.jenkins.plugins.multijob.PhaseJobsConfig>
          <jobName>test_branch_origin_integration</jobName>
          <currParams>true</currParams>
          <exposedSCM>false</exposedSCM>
          <disableJob>false</disableJob>
          <parsingRulesPath></parsingRulesPath>
          <maxRetries>0</maxRetries>
          <enableRetryStrategy>false</enableRetryStrategy>
          <enableCondition>false</enableCondition>
          <abortAllJob>false</abortAllJob>
          <condition></condition>
          <configs class="empty-list"/>
          <killPhaseOnJobResultCondition>NEVER</killPhaseOnJobResultCondition>
          <buildOnlyIfSCMChanges>false</buildOnlyIfSCMChanges>
          <applyConditionOnlyIfNoSCMChanges>false</applyConditionOnlyIfNoSCMChanges>
        </com.tikal.jenkins.plugins.multijob.PhaseJobsConfig>
        <com.tikal.jenkins.plugins.multijob.PhaseJobsConfig>
          <jobName>test_branch_origin_extended_conformance_install</jobName>
          <currParams>true</currParams>
          <exposedSCM>false</exposedSCM>
          <disableJob>false</disableJob>
          <parsingRulesPath></parsingRulesPath>
          <maxRetries>0</maxRetries>
          <enableRetryStrategy>false</enableRetryStrategy>
          <enableCondition>false</enableCondition>
          <abortAllJob>false</abortAllJob>
          <condition></condition>
          <configs class="empty-list"/>
          <killPhaseOnJobResultCondition>NEVER</killPhaseOnJobResultCondition>
          <buildOnlyIfSCMChanges>false</buildOnlyIfSCMChanges>
          <applyConditionOnlyIfNoSCMChanges>false</applyConditionOnlyIfNoSCMChanges>
        </com.tikal.jenkins.plugins.multijob.PhaseJobsConfig>
        <com.tikal.jenkins.plugins.multijob.PhaseJobsConfig>
          <jobName>test_branch_origin_extended_conformance_install_update</jobName>
          <currParams>true</currParams>
          <exposedSCM>false</exposedSCM>
          <disableJob>false</disableJob>
          <parsingRulesPath></parsingRulesPath>
          <maxRetries>0</maxRetries>
          <enableRetryStrategy>false</enableRetryStrategy>
          <enableCondition>false</enableCondition>
          <abortAllJob>false</abortAllJob>
          <condition></condition>
          <configs class="empty-list"/>
          <killPhaseOnJobResultCondition>NEVER</killPhaseOnJobResultCondition>
          <buildOnlyIfSCMChanges>false</buildOnlyIfSCMChanges>
          <applyConditionOnlyIfNoSCMChanges>false</applyConditionOnlyIfNoSCMChanges>
        </com.tikal.jenkins.plugins.multijob.PhaseJobsConfig>
        <com.tikal.jenkins.plugins.multijob.PhaseJobsConfig>
          <jobName>test_branch_origin_extended_networking_minimal</jobName>
          <currParams>true</currParams>
          <exposedSCM>false</exposedSCM>
          <disableJob>false</disableJob>
          <parsingRulesPath></parsingRulesPath>
          <maxRetries>0</maxRetries>
          <enableRetryStrategy>false</enableRetryStrategy>
          <enableCondition>false</enableCondition>
          <abortAllJob>false</abortAllJob>
          <condition></condition>
          <configs class="empty-list"/>
          <killPhaseOnJobResultCondition>NEVER</killPhaseOnJobResultCondition>
          <buildOnlyIfSCMChanges>false</buildOnlyIfSCMChanges>
          <applyConditionOnlyIfNoSCMChanges>false</applyConditionOnlyIfNoSCMChanges>
        </com.tikal.jenkins.plugins.multijob.PhaseJobsConfig>
        <com.tikal.jenkins.plugins.multijob.PhaseJobsConfig>
          <jobName>test_branch_origin_extended_conformance_gce</jobName>
          <currParams>true</currParams>
          <exposedSCM>false</exposedSCM>
          <disableJob>false</disableJob>
          <parsingRulesPath></parsingRulesPath>
          <maxRetries>0</maxRetries>
          <enableRetryStrategy>false</enableRetryStrategy>
          <enableCondition>false</enableCondition>
          <abortAllJob>false</abortAllJob>
          <condition></condition>
          <configs class="empty-list"/>
          <killPhaseOnJobResultCondition>NEVER</killPhaseOnJobResultCondition>
          <buildOnlyIfSCMChanges>false</buildOnlyIfSCMChanges>
          <applyConditionOnlyIfNoSCMChanges>false</applyConditionOnlyIfNoSCMChanges>
        </com.tikal.jenkins.plugins.multijob.PhaseJobsConfig>
      </phaseJobs>
      <continuationCondition>ALWAYS</continuationCondition>
    </com.tikal.jenkins.plugins.multijob.MultiJobBuilder>
    <hudson.plugins.copyartifact.CopyArtifact plugin="copyartifact@1.38">
      <project>test_branch_origin_check</project>
      <filter>**</filter>
      <target>test_branch_origin_check/</target>
      <excludes></excludes>
      <selector class="hudson.plugins.copyartifact.SpecificBuildSelector">
        <buildNumber>${TEST_BRANCH_ORIGIN_CHECK_BUILD_NUMBER}</buildNumber>
      </selector>
      <optional>true</optional>
      <doNotFingerprintArtifacts>true</doNotFingerprintArtifacts>
    </hudson.plugins.copyartifact.CopyArtifact>
    <hudson.plugins.copyartifact.CopyArtifact plugin="copyartifact@1.38">
      <project>test_branch_origin_integration</project>
      <filter>**</filter>
      <target>test_branch_origin_integration/</target>
      <excludes></excludes>
      <selector class="hudson.plugins.copyartifact.SpecificBuildSelector">
        <buildNumber>${TEST_BRANCH_ORIGIN_INTEGRATION_BUILD_NUMBER}</buildNumber>
      </selector>
      <optional>true</optional>
      <doNotFingerprintArtifacts>true</doNotFingerprintArtifacts>
    </hudson.plugins.copyartifact.CopyArtifact>
    <hudson.plugins.copyartifact.CopyArtifact plugin="copyartifact@1.38">
      <project>test_branch_origin_extended_conformance_install</project>
      <filter>**</filter>
      <target>test_branch_origin_extended_conformance_install/</target>
      <excludes></excludes>
      <selector class="hudson.plugins.copyartifact.SpecificBuildSelector">
        <buildNumber>${TEST_BRANCH_ORIGIN_EXTENDED_CONFORMANCE_INSTALL_BUILD_NUMBER}</buildNumber>
      </selector>
      <optional>true</optional>
      <doNotFingerprintArtifacts>true</doNotFingerprintArtifacts>
    </hudson.plugins.copyartifact.CopyArtifact>
    <hudson.plugins.copyartifact.CopyArtifact plugin="copyartifact@1.38">
      <project>test_branch_origin_extended_conformance_install_update</project>
      <filter>**</filter>
      <target>test_branch_origin_extended_conformance_install_update/</target>
      <excludes></excludes>
      <selector class="hudson.plugins.copyartifact.SpecificBuildSelector">
        <buildNumber>${TEST_BRANCH_ORIGIN_EXTENDED_CONFORMANCE_INSTALL_UPDATE_BUILD_NUMBER}</buildNumber>
      </selector>
      <optional>true</optional>
      <doNotFingerprintArtifacts>true</doNotFingerprintArtifacts>
    </hudson.plugins.copyartifact.CopyArtifact>
    <hudson.plugins.copyartifact.CopyArtifact plugin="copyartifact@1.38">
      <project>test_branch_origin_extended_networking_minimal</project>
      <filter>**</filter>
      <target>test_branch_origin_extended_networking_minimal/</target>
      <excludes></excludes>
      <selector class="hudson.plugins.copyartifact.SpecificBuildSelector">
        <buildNumber>${TEST_BRANCH_ORIGIN_EXTENDED_NETWORKING_MINIMAL_BUILD_NUMBER}</buildNumber>
      </selector>
      <optional>true</optional>
      <doNotFingerprintArtifacts>true</doNotFingerprintArtifacts>
    </hudson.plugins.copyartifact.CopyArtifact>
    <hudson.plugins.copyartifact.CopyArtifact plugin="copyartifact@1.38">
      <project>test_branch_origin_extended_conformance_gce</project>
      <filter>**</filter>
      <target>test_branch_origin_extended_conformance_gce/</target>
      <excludes></excludes>
      <selector class="hudson.plugins.copyartifact.SpecificBuildSelector">
        <buildNumber>${TEST_BRANCH_ORIGIN_EXTENDED_CONFORMANCE_GCE_BUILD_NUMBER}</buildNumber>
      </selector>
      <optional>true</optional>
      <doNotFingerprintArtifacts>true</doNotFingerprintArtifacts>
    </hudson.plugins.copyartifact.CopyArtifact>
    <hudson.tasks.Shell>
      <command># record the log from the downstream job here for FCM parsing
cat /var/lib/jenkins/jobs/test_branch_origin_check/builds/${TEST_BRANCH_ORIGIN_CHECK_BUILD_NUMBER}/log
cat /var/lib/jenkins/jobs/test_branch_origin_integration/builds/${TEST_BRANCH_ORIGIN_INTEGRATION_BUILD_NUMBER}/log
cat /var/lib/jenkins/jobs/test_branch_origin_extended_conformance_install/builds/${TEST_BRANCH_ORIGIN_EXTENDED_CONFORMANCE_INSTALL_BUILD_NUMBER}/log
cat /var/lib/jenkins/jobs/test_branch_origin_extended_conformance_install_update/builds/${TEST_BRANCH_ORIGIN_EXTENDED_CONFORMANCE_INSTALL_UPDATE_BUILD_NUMBER}/log
cat /var/lib/jenkins/jobs/test_branch_origin_extended_networking_minimal/builds/${TEST_BRANCH_ORIGIN_EXTENDED_NETWORKING_MINIMAL_BUILD_NUMBER}/log
cat /var/lib/jenkins/jobs/test_branch_origin_extended_conformance_gce/builds/${TEST_BRANCH_ORIGIN_EXTENDED_CONFORMANCE_GCE_BUILD_NUMBER}/log
      </command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>.config/origin-ci-tool/logs/junit/*.xml,artifacts/**/*.xml</artifacts>
      <allowEmptyArchive>true</allowEmptyArchive>
      <onlyIfSuccessful>false</onlyIfSuccessful>
      <fingerprint>false</fingerprint>
      <defaultExcludes>true</defaultExcludes>
      <caseSensitive>true</caseSensitive>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.junit.JUnitResultArchiver plugin="junit@1.13">
      <testResults>.config/origin-ci-tool/logs/junit/*.xml,**/*.xml</testResults>
      <keepLongStdio>true</keepLongStdio>
      <healthScaleFactor>1.0</healthScaleFactor>
      <allowEmptyResults>true</allowEmptyResults>
    </hudson.tasks.junit.JUnitResultArchiver>
    <hudson.plugins.s3.S3BucketPublisher plugin="s3@0.10.11-SNAPSHOT">
      <profileName>Jenkins-AWS</profileName>
      <entries>
        <hudson.plugins.s3.Entry>
          <bucket>aos-ci/jenkinsorigin</bucket>
          <sourceFile>artifacts/**, .config/origin-ci-tool/**</sourceFile>
          <excludedFile></excludedFile>
          <storageClass>STANDARD</storageClass>
          <selectedRegion>us-east-1</selectedRegion>
          <noUploadOnFailure>false</noUploadOnFailure>
          <uploadFromSlave>false</uploadFromSlave>
          <managedArtifacts>true</managedArtifacts>
          <useServerSideEncryption>false</useServerSideEncryption>
          <flatten>false</flatten>
          <gzipFiles>false</gzipFiles>
          <showDirectlyInBrowser>false</showDirectlyInBrowser>
          <keepForever>false</keepForever>
        </hudson.plugins.s3.Entry>
      </entries>
      <dontWaitForConcurrentBuildCompletion>true</dontWaitForConcurrentBuildCompletion>
      <consoleLogLevel>
        <name>WARNING</name>
        <value>900</value>
        <resourceBundleName>sun.util.logging.resources.logging</resourceBundleName>
      </consoleLogLevel>
      <pluginFailureResultConstraint>
        <name>SUCCESS</name>
        <ordinal>0</ordinal>
        <color>BLUE</color>
        <completeBuild>true</completeBuild>
      </pluginFailureResultConstraint>
      <userMetadata/>
    </hudson.plugins.s3.S3BucketPublisher>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ws__cleanup.PreBuildCleanup plugin="ws-cleanup@0.32">
      <deleteDirs>false</deleteDirs>
      <cleanupParameter></cleanupParameter>
      <externalDelete></externalDelete>
    </hudson.plugins.ws__cleanup.PreBuildCleanup>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper plugin="ansicolor@0.4.2">
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
  </buildWrappers>
  <pollSubjobs>false</pollSubjobs>
</com.tikal.jenkins.plugins.multijob.MultiJobProject>