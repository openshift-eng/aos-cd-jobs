#!/usr/bin/env bash

shopt -s extglob

topics=(
  jenkins
  rhcos
  bz
  backlog
  prs
  triage_docs
)

browsers=(
  brave
  chrome
  chromium
  firefox
  mozilla-firefox
  qutebrowser
)


# Data
gh_repos=(
  aos-cd-jobs
  ocp-build-data
  doozer
  elliott
  art-ci-toolkit
  art-bot
  ocp-build-data-validator
)

rhcos_consoles=(
  'https://privileged.psi.redhat.com/console/project/rhcos-art/browse/pods'
  'https://p8.psi.redhat.com:8443/console/project/rhcos/browse/pipelines'
  'https://osbs-s390x-3.prod.engineering.redhat.com:8443/console/project/rhcos/browse/pipelines'
  'https://osbs-aarch64-1.engineering.redhat.com:8443/console/project/rhcos/'
)

bz_query_params=(
  'bug_status=NEW'
  'classification=Red%20Hat'
  'component=Release'
  'email1=lmeyer%40redhat'
  'emailtype1=substring'
  'product=OpenShift%20Container%20Platform'
  'query_format=advanced'
)

bz_column_list=(
  component
  assigned_to
  bug_severity
  bug_status
  resolution
  short_desc
  changeddate
  cf_pm_score
  target_release
)

halp() {
  cat <<-EOF
	$0: Open all links needed for the triage manager role in a single browser window.
	Listens to the \$BROWSER environment variable to select the browser. Currently supports
	${browsers[@]}.
	The following topic may be selected: ${topics[@]}.

	Usage:
	  $0 firefox rhcos bz

	For more information about the RedHat Openshift ART Triage manager role, visit
	https://mojo.redhat.com/docs/DOC-1207451
	EOF
}

make_pattern() {
  declare -n arr="$1"
  echo "^($(echo "${arr[@]}" | tr ' ' '|'))$"
}

main() {
  declare -a user_topics=()
  topic_pattern="$(make_pattern topics)"
  browser_pattern="$(make_pattern browsers)"
  for arg in "$@"; do
    if [[ "$arg" =~ ^(-h|help|--help)$ ]]; then
      halp
      exit 0
    elif [[ "$arg" =~ $topic_pattern ]]; then
      [[ "$arg" == pr ]] && arg=prs
      user_topics+=("$arg")
    elif [[ "$arg" =~ $browser_pattern ]]; then
      browser="$arg"
    else
      echo "Do not understand $arg" >/dev/stderr
      halp >/dev/stderr
      exit 1
    fi
  done

  : ${browser:=${BROWSER-firefox}}

  (( ${#user_topics[@]} == 0 )) && user_topics=( "${topics[@]}" )
  urls=( $(for topic in "${user_topics[@]}"; do "$topic"; done) )
  open-urls
}

releases=(
  $(
    sourcefile="$BASH_SOURCE"
    executable="$(readlink -f "$sourcefile")"
    commonlib="${executable%/*/*/*}/pipeline-scripts/commonlib.groovy"

    [[ -f "$commonlib" ]] || {
      echo "Script assumes ocp-cat is symlinked to aos-cd-jobs. Fail">/dev/stderr
      exit 1
    }

    awk -F'"' '
      /^ocp[34]Versions/ { f=1 }
      f && /^]/ { f=0 }
      f && NF>2 { print $2 }
    ' "$commonlib" | sort --version-sort
  )
)

bugzilla() {
  local bz_components=(
    $(
      for r in "${releases[@]}"; do
        echo "$r.0"
        echo "$r.z"
      done
      echo "---" # no target yet - likely to need triage
    )
  )

  local release_query="$(printf '&target_release=%s' "${bz_components[@]}")"
  local column_query="columnlist=deadbeef$(printf "%%2C%s" "${bz_column_list[@]}")"
  local query="$(printf '&%s' "${bz_query_params[@]}" "$column_query")"
  local base_url='https://bugzilla.redhat.com/buglist.cgi?1=1'

  echo "${base_url}${query}${release_query}"
}

bz() {
  # non-cves
  echo "$(bugzilla)&keywords=SecurityTracking%2C%20&keywords_type=nowords"
  # cves
  echo "$(bugzilla)&keywords=SecurityTracking%2C%20&keywords_type=allwords"
}

rhcos() {
  local r major minor
  for r in "${releases[@]}"; do
    major="${r%.*}"
    minor="${r#*.}"
    (( major < 4 )) && continue
    echo "https://jenkins-rhcos-art.cloud.privileged.psi.redhat.com/job/rhcos-art/job/rhcos-art-rhcos-$r/"
    echo "https://jenkins-rhcos.cloud.s390x.psi.redhat.com/job/rhcos/job/rhcos-rhcos-$r/"
    echo "https://jenkins-rhcos.cloud.p8.psi.redhat.com/job/rhcos/job/rhcos-rhcos-$r/"
    (( minor < 9 )) && continue
    echo "https://jenkins-rhcos.cloud.arm.psi.redhat.com/job/rhcos/job/rhcos-rhcos-$r/"
  done
  for console in "${rhcos_consoles[@]}"; do
    echo "$console"
  done
}

prs() {
  printf "https://github.com/openshift/%s/pulls/\n" "${gh_repos[@]}"
  echo "https://github.com/pulls?q=is%3Aopen+is%3Apr+label%3Amerge-post-promote+archived%3Afalse+"
}

jenkins() {
  echo 'https://saml.buildvm.hosts.prod.psi.bos.redhat.com:8888/view/OCP4%20Build%20Dashboard/'
  echo 'https://saml.buildvm.hosts.prod.psi.bos.redhat.com:8888/job/scheduled-builds/'
}

backlog() {
  echo 'https://issues.redhat.com/secure/Dashboard.jspa?selectPageId=12331022'
}

triage_docs() {
  echo 'http://saml.buildvm.hosts.prod.psi.bos.redhat.com:3000/d/aTqExXOMz/system-stats?orgId=1&refresh=30s'
  echo 'https://source.redhat.com/groups/public/atomicopenshift/atomicopenshift_wiki/art_buildvmjenkins_security_patching_sop'
}

if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
  set -euo pipefail
  script="$(readlink "$0" || echo "$0")"
  source "${script%/*}/open-urls"

  main "$@"
fi
