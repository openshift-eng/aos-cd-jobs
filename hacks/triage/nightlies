#!/usr/bin/env bash

set -euo pipefail

halp() {
  cat <<-EOHALP
	nightlies: open web pages of release controller with a bunch of nightlies.
	
	nightlies -h|--help
	  Show help
	
	nightlies
	  Show release controller links for the arches
	
	nightlies 4.9
	  Show release controller overview pages with the list 4.9 nightlies
	
	nightlies 4.9 latest|-l|--latest
	  Show the latest nightlies
	
	nightlies stdout|-s|--stdout
	  Print links to stdout rather than opening in browser
	EOHALP
}

main() {
  parse_args "$@"
  urls=( $(build_urls) )

  ((stdout)) && {
    printf "%s\n" "${urls[@]}"
    return
  }
  open-urls
}

arches=(
  amd64
  ppc64le
  s390x
  arm64
  multi
)

script="$(readlink "$0" || echo "$0")"
source "${script%/*}/open-urls"

parse_args() {
  version=""
  latest=0
  stdout=0

  for arg in "$@"; do
    case "$arg" in
      -h|--help|help)
        halp
        exit 0
        ;;
      latest|l|-l|--latest)
        latest=1
        ;;
      stdout|-s|--stdout)
        stdout=1
        ;;
      firefox|chrome|chromium|brave|qutebrowser)
        browser="$arg"
        ;;
      *)
        version="$arg"
        ;;
    esac
  done

  : ${browser:=${BROWSER-firefox}}

  if ((latest)) && [[ -z "$version" ]]; then
    echo "Cannot 'latest' without a version"
    halp
    exit 1
  fi

  if [[ -n "${version}" ]]; then
    stream="$version.0-0.nightly"
  fi
}

build_link() {
  # Building urls of the following form:
  # https://amd64.ocp.releases.ci.openshift.org/releasestream/4.9.0-0.nightly/latest
  # https://amd64.ocp.releases.ci.openshift.org/#4.9.0-0.nightly
  # https://amd64.ocp.releases.ci.openshift.org/

  local stream
  stream="${1:-}"
  if [[ "$arch" != "amd64" && -n "$stream" ]]; then
    stream="${stream}-$arch"
  fi
  
  if ((latest)) && [[ -n "$stream" ]]; then
    pointer="releasestream/$stream/latest"
  elif [[ -z "$stream" ]]; then
    pointer=""
  else
    pointer="#$stream"
  fi
  echo "https://$arch.ocp.releases.ci.openshift.org/$pointer"
}

build_urls() {
  for arch in "${arches[@]}"; do
    if [[ -n "$version" ]]; then
      major="${version%.*}"
      minor="${version#*.}"
      [[ "$arch" == multi ]] && (( major == 4 && minor < 11 )) && continue
    fi
    build_link ${stream:-}
  done
}

if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
  main "$@"
fi
